Panda = data manipulation library
Numphy = Scientific Computing Library
Matplotlib and Seaborn = Viz library
Calmap= heat map libary
################################################


import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import calmap
from pandas_profiling import ProfileReport

## Link to data source: https://www.kaggle.com/aungpyaeap/supermarket-sales

df = pd.read_csv('supermarket_sales.csv')
df.tail(10)
df.dtypes
df['Date'] = pd.to_datetime(df['Date'])
df.set_index('Date',inplace=True)
df.describe()


## Univariate Analysis

-- what does the distribution of customer ratings looks like?

sns.distplot(df['Rating'])
plt.axvline(x=np.mean(df['Rating']),c='red',ls='--',label='mean')
plt.axvline(x=np.percentile(df['Rating'],25),c='green',ls='--',label='25-75th percentile')
plt.axvline(x=np.percentile(df['Rating'],75),c='green',ls='--')
plt.legend()

df.hist(figsize=(10,10)) --to check all graphs start from unitprice and so on

-- do aggregate sales numbers differ by much between branches?

sns.countplot(df['Branch'])
df['Branch'].value_counts()
sns.countplot(df['Payment'])
df['Payment'].value_counts()


## Bivariate Analysis

--Is there a relationship between gross income and customer ratings?

sns.scatterplot(df['Rating'],df['gross income'])
sns.regplot(df['Rating'],df['gross income'])
sns.boxplot(x=df['Branch'],y=df['gross income'])
sns.boxplot(x=df['Gender'],y=df['gross income'])

--Is there a noticeable time trend in gross income

df.groupby(df.index).mean().index -- as time in x
df.groupby(df.index).mean()['gross income'] --as gross income in y
sns.lineplot(x=df.groupby(df.index).mean().index,
	     y=df.groupby(df.index).mean()['gross income'])
sns.pairplot(df) --plot every bivariate relation as possible


## Dealing with Duplicate Rows and Missing Values

df.duplicated().sum() --check how many rows are duplicated
df(df.duplicated()==True) --check the duplicate rows
df.drop_duplicated(inplace=True) --to drop duplicate permanently

df.isna().sum() --check the missing values
sns.heatmap(df.isnull(),cbar=False) --apply heatmap to check null value
df.fillna(df.mean(),inplace=True) --Fill N/A with mean and inplace it permanently
df.fillna(df.mode().iloc[0],inplace=True) --change NA value in categorical columns

-- Panda profiling package
dataset = pd.read_csv('supermarket_sales.csv')
prof = ProfileReport(dataset)
prof


## Correlation Analysis

--correlation with two columns (use numphy)
round(np.corrcoef(df['gross income'],df['Rating'])[1][0],2) --find correlation between gross income and rating
np.round(df.corr(),2) --calculate every pair numeric columns
sns.heatmap(np.round(df.corr(),2),annot=True) --display heatmap with correlation and annotation












